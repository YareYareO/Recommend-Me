@page
@using Microsoft.AspNetCore.Html;
@using RecMe.Pages.Shared;
@model RecMe.Pages.Things.IndexModel

@section SearchHead{
    <link rel="stylesheet" href="~/css/SearchPartial/SearchContainerStyle.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/SearchPartial/SelectButtonStyle.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/SearchPartial/ToggleChildrenButtonStyle.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/ThingList/ThingList.css" asp-append-version="true" />
}

@{
    ViewData["Title"] = "Index";
}

<h1>Search for Things!</h1>
<a asp-page="Create">Create New</a>

<partial name="_SearchPartial" model="Model.Tag" />
@section SearchScript{<script>
        function ToggleButtonVisibility(taggroupname) {
            $(taggroupname).toggle();
        }
    </script>}

<ul>
    @foreach (var item in Model.Thing)
    {
        <li class="card-thing">
            <div class="card-upvote-section">
                <span class="card-upvote-number">@(await Model.GetTotalUpvotes(item.Id))</span>

                @if (User.Identity != null && User.Identity.IsAuthenticated)
                {
                    <form method="post" asp-page-handler="Upvote" asp-route-CurrentPage="@Model.CurrentPage">
                        <input type="hidden" name="thingId" value="@item.Id" />
                        <button type="submit" class="btn-outline-success">Up</button>
                    </form>
                }
            </div>

            <div class="card-text-section">
                <p class="card-text-title">@Html.DisplayFor(modelItem => item.Name)</p>
                <p class="card-text-text">@Html.DisplayFor(modelItem => item.Description)</p>
            </div>
        </li>
    }
</ul>

<ul class="pagination" style="margin-top: 10px;">

    @if (Model.CurrentPage > 1)
    {
        <li class="page-item"><a class="page-link" asp-page="Index" asp-route-CurrentPage="1">First</a></li>
        <li class="page-item"><a class="page-link"  asp-page="Index" asp-route-CurrentPage="@(Model.CurrentPage - 1)">Previous</a></li>
    }

    @for (int i = 1; i <= Math.Ceiling((double)Model.TotalItems / Model.PageSize); i++)
    {
        <li class="page-item"><a class="page-link" asp-page="Index" asp-route-CurrentPage="@i">@i</a></li>
    }

    @if (Model.CurrentPage < Math.Ceiling((double)Model.TotalItems / Model.PageSize))
    {
        <li class="page-item"><a class="page-link" asp-page="Index" asp-route-CurrentPage="@(Model.CurrentPage + 1)">Next</a></li>
        <li class="page-item"><a class="page-link" asp-page="Index" asp-route-CurrentPage="@Math.Ceiling((double)Model.TotalItems / Model.PageSize)">Last</a></li>
    }
</ul>
