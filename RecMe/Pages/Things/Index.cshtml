@page
@using Microsoft.AspNetCore.Html;
@using RecMe.Pages.Shared;
@model RecMe.Pages.Things.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Search for Things!</h1>

<partial name="_SearchPartial" model="Model.Tag" />
@section Scripts{
    <script>
        function ToggleButtonVisibility(taggroupname) {
            $(taggroupname).toggle();
        }
    </script>}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Thing[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Thing[0].Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Thing) {
                <tr>
                    <td>
                            <p>Total Upvotes: @(await Model.GetTotalUpvotes(item.Id))</p>

                            <!-- Display the upvote button -->
                            @if (User.Identity != null && User.Identity.IsAuthenticated)
                            {
                                <form method="post" asp-page-handler="Upvote" asp-route-CurrentPage="@Model.CurrentPage">
                                    <input type="hidden" name="thingId" value="@item.Id" />
                                    <button type="submit">Upvote</button>
                                </form>
                            }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
        }
    </tbody>
    
</table>
<div>
    @if (Model.CurrentPage > 1)
    {
        <a asp-page="Index" asp-route-CurrentPage="1">First</a>
        <a asp-page="Index" asp-route-CurrentPage="@(Model.CurrentPage - 1)">Previous</a>
    }

    @for (int i = 1; i <= Math.Ceiling((double)Model.TotalItems / Model.PageSize); i++)
    {
        <a asp-page="Index" asp-route-CurrentPage="@i">@i</a>
    }

    @if (Model.CurrentPage < Math.Ceiling((double)Model.TotalItems / Model.PageSize))
    {
        <a asp-page="Index" asp-route-CurrentPage="@(Model.CurrentPage + 1)">Next</a>
        <a asp-page="Index" asp-route-CurrentPage="@Math.Ceiling((double)Model.TotalItems / Model.PageSize)">Last</a>
    }
</div>
